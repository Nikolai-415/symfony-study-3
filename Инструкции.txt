===================================================
Используемые технологии
===================================================
- Docker-Compose v.3.9;
- PHP v.8.1.9;
- Symfony v.5.3.6;
- Xdebug v.3.1.5;
- Composer v.2.3.10;
- Nginx v.1.23.1;
- PostgreSQL v.14.4;
- pgAdmin4 v.6.12;
- Bootstrap v.5.0.2.
===================================================

===================================================
Необходимые компоненты
===================================================
- Docker (используется Docker-Compose).
===================================================

===================================================
Установка
===================================================
1. Запустить терминал в корне проекта;
2. Добавить shell-команды командой:
   . commands-prod.sh
3. Собрать проект командой:
   n415 build project
===================================================

===================================================
Запуск
===================================================
1. Запустить проект командой:
   n415 up
2. Создать таблицы в БД командой (только при первом запуске):
   n415 tables create
3. Заполнить таблицы в БД командой (только при первом запуске):
   n415 tables seed
4. Система будет доступна по адресу:
   http://localhost:80/
   PGadmin (запускается спустя некоторое время после запуска PHP):
   http://localhost:8080/
===================================================

===================================================
Немного о структуре
===================================================
- В корне проекта расположен сам проект Symfony со всеми файлами. Dockerfile для PHP и Docker-Compose.yml также расположены тут.
- В папке "nginx" расположен файл конфигурации для Nginx.
- В папке "postgres" расположен Dockerfile для PostgreSQL, а также SQL-скрипты (в папке "sql").
- Конфигурационные ini-файлы для PHP я расположил в папке "./config/ini".
===================================================

===================================================
Краткое описание
===================================================
- На главной странице ничего примечательного не отображается. Неавторизованным пользователям доступны страницы для авторизации и регистрации. 
- В БД по умолчанию присутствуют записи двух пользователей:
  - admin (имеет все роли);
  - user (не имеет ролей).
  Пароль от обоих учётных записей: password.
- После регистрации идёт перенаправление на форму авторизации (я ещё не разобрался как сделать автоматический вход после неё).
- После авторизации пользователь попадает снова на главную страницу. В меню теперь доступны страница просмотра записей (при наличии соответствующей роли) и страница выхода из аккаунта.
- На странице просмотра записей, помимо самой таблицы, присутствует кнопка для добавления записи, а также кнопки для фильтрации и сортировки. Присутствует панель паджинации сверху и снизу таблицы.
- Для каждой записи в таблице есть также кнопки для изменения и удаления. Они доступны только если пользователь имеет соответствующие роли.
- Все поля в таблице отображаются стандартно, за исключением аватара, который отображается как картинка, и файла, для которого отображается кнопка для скачивания.
===================================================

===================================================
PGadmin
===================================================
- Авторизация в PGadmin:
  - Username: admin@mail.com;
  - Password: password.
- При работе в PGadmin, добавить сервер необходимо с настройками:
  - Host: postgres;
  - Port: 5432;
  - Username: admin;
  - Password: password.
===================================================

===================================================
Остановка
===================================================
- Остановить проект командой:
  n415 down
===================================================

===================================================
Смена окружения
===================================================
- По умолчанию используется окружение Production. Для смены на Development используется команда (необходимо остановить контейнеры):
  n415 set stopped dev
- Для смены на Production используется аналогичная команда:
  n415 set stopped prod
===================================================

===================================================
Удаление
===================================================
- Очистить проект командой:
  n415 clear project
- Конфигурация проекта использует образы: nginx:1.23.1 и dpage/pgadmin4:6.12. Если они больше нигде не используются, то и их удалить соответствующими командами:
  docker rmi nginx:1.23.1
  docker rmi dpage/pgadmin4:6.12
===================================================